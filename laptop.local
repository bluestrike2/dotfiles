#!/bin/sh

fancy_echo() {
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "\\n$fmt\\n" "$@"
}

git_clone_or_pull() {
  local REPOSRC=$1
  local LOCALREPO=$2
  local LOCALREPO_VC_DIR=$LOCALREPO/.git
  if [[ ! -d "$LOCALREPO_VC_DIR" ]]; then
    git clone --recursive $REPOSRC $LOCALREPO
  else
    pushd $LOCALREPO
    git pull $REPOSRC && git submodule update --init --recursive
    popd
  fi
}

fancy_echo "Are you signed into the Mac App Store (y/n)?"
read answer
if [ "$answer" != "${answer#[Yy]}"] ;then
  fancy_echo "Yes, already signed in to MAS ..."
else
  fancy_echo "Exiting. Sign in to MAS and then run laptop.local directly."; exit 0
fi

brew bundle --file=- <<EOF
tap "caskroom/fonts"
tap "d12frosted/emacs-plus"
tap "neovim/neovim"
tap "puma/puma"
tap "thoughtbot/formulae"
tap "homebrew-ffmpeg/ffmpeg"

brew "emacs-plus"

brew "asdf"
brew "diff-so-fancy"
brew "git-flow"
brew "go"
brew "hugo"
brew "mas"
# brew "memcached"
# brew "mysql"
brew "neovim"
brew "puma/puma/puma-dev"
# brew "python"
# brew "qt5"
brew "reattach-to-user-namespace", args: ["with-wrap-pbcopy-and-pbpaste"]
brew "shellcheck"
brew "sqlite"
brew "thoughtbot/formulae/parity"
brew "thoughtbot/formulae/rcm"
brew "varenc/ffmpeg/ffmpeg"
brew "wget"

brew "gnupg"
brew "pinentry-mac"

cask "adobe-creative-cloud"
cask "awareness"
cask "alfred"
cask "appcleaner"
cask "atom"
cask "autodesk-fusion360"
cask "backblaze"
cask "battle-net"
cask "calibre"
cask "carbon-copy-cloner"
cask "cloudflare-warp"
cask "colormunk-photo"
cask "discord"
cask "dropbox"
cask "docker-toolbox"
cask "firefox"
cask "font-fira-code"
cask "font-fira-sans"
cask "font-hack"
cask "font-inconsolata"
cask "font-iosevka"
cask "font-source-code-pro"
cask "fork"
cask "handbrake"
cask "iina"
cask "kext-utility"
cask "kindle"
cask "kindlegen"
cask "kindle-previewer"
cask "liteicon"
cask "little-snitch"
cask "mactex"
cask "microsoft-office"
cask "openemu"
cask "origin"
cask "plex-media-server"
cask "postico"
cask "sixtyforce"
cask "slack"
cask "sketch"
cask "steam"
cask "steermouse"
cask "the-unarchiver"
cask "transmission"
cask "vivaldi"
cask "vlc"
cask "vlcstreamer"
EOF

fancy_echo "Are you signed into the Mac App Store (y/n)?"
read answer
if [ "$answer" != "${answer#[Yy]}"] ;then
  fancy_echo "Installing Mac app store apps ..."
  # App Store Apps
  brew bundle --file=- <<EOF
  mas "1Password", id: 443987910
  mas "Monit", id: 101485024
  mas "iA Writer", id: 775737590
  mas "Keynote", id: 409183694
  mas "Pages", id: 409201541
EOF
else
  fancy_echo "Not logged in to MAS. Skipping Mac app store apps. "; exit 0
fi

fancy_echo "Cleaning up old Homebrew formulae ..."
brew cleanup

# assumes ssh key exists and has been added to github account
fancy_echo "Cloning personal dotfiles and zprezto ..."
git_clone_or_pull 'https://github.com/bluestrike2/dotfiles.git' '${HOME}/dotfiles'
git_clone_or_pull 'https://github.com/sorin-ionescu/prezto.git' '${HOME}/.zprezto'

# Link emacs-plus to /Applications (spacemacs)
ln -s /usr/local/Cellar/emacs-plus/*/Emacs.app/ /Applications/

# dein.vim plugin manager
# => review the linked file over before installing
fancy_echo "Installing dein.vim plugin manager ..."
cd "$HOME"
mkdir -p $HOME/.config
curl https://raw.githubusercontent.com/Shougo/dein.vim/master/bin/installer.sh > 'dein_installer.sh'
sh ./dein_installer.sh ".config/nvim/bundle"

# Install atom packages
if ! type "$apm" > /dev/null; then
  fancy_echo "Installing atom packages via apm ..."
  apm install --packages-file ~/dotfiles/atom/packages.txt
else
  fancy_echo "ERROR apm not found."
fi

# link dotfiles from dotfiles directory
if [ ! -r "$HOME/.rcrc" ]; then
  fancy_echo "Linking dotfiles with rcm ..."
  env RCRC=$HOME/dotfiles/rcrc rcup -v
fi
